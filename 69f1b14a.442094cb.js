(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{162:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return u}));var a=n(2),r=n(9),o=(n(0),n(196)),i={id:"redux-saga",title:"redux-saga"},s={id:"js/redux-saga",isDocsHomePage:!1,title:"redux-saga",description:"redux-saga is a library to manage side effects in your application. It works",source:"@site/docs/js/redux-saga.md",permalink:"/docs/js/redux-saga",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/js/redux-saga.md",sidebar:"someSidebar",previous:{title:"reselect",permalink:"/docs/js/reselect"},next:{title:"Removing redux-saga",permalink:"/docs/js/remove"}},c=[{value:"Usage",id:"usage",children:[]}],l={rightToc:c};function u(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"redux-saga")," is a library to manage side effects in your application. It works\nbeautifully for data fetching, concurrent computations and a lot more.\n",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://twitter.com/sebastienlorber"}),"Sebastien Lorber")," put it best:"),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Imagine there is widget1 and widget2. When some button on widget1 is clicked,\nthen it should have an effect on widget2. Instead of coupling the 2 widgets\ntogether (i.e. widget1 dispatches an action that targets widget2), widget1 only\ndispatches that its button was clicked. Then the saga listens for this button\nclick and updates widget2 by dispatching a new event that widget2 is aware of."),Object(o.b)("p",{parentName:"blockquote"},"This adds a level of indirection that is unnecessary for simple apps, but makes\nit easier to scale complex applications. You can now publish widget1 and\nwidget2 to different npm repositories so that they never have to know about\neach other, without having them share a global registry of actions. The 2\nwidgets are now bounded by contexts that can live separately. They don't need\neach other to be consistent and can be reused in other apps as well. ",Object(o.b)("strong",{parentName:"p"},"The saga\nis the coupling point between the two widgets that coordinate them in a\nmeaningful way for your business."))),Object(o.b)("p",null,Object(o.b)("em",{parentName:"p"},"Note: It is well worth reading the ",Object(o.b)("a",Object(a.a)({parentName:"em"},{href:"https://stackoverflow.com/questions/34570758/why-do-we-need-middleware-for-async-flow-in-redux/34623840#34623840"}),"source"),"\nof this quote in its entirety!")),Object(o.b)("p",null,"To learn more about this amazing way to handle concurrent flows, start with the\n",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://redux-saga.github.io/redux-saga"}),"official documentation")," and explore\nsome examples! (Read ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://stackoverflow.com/questions/34930735/pros-cons-of-using-redux-saga-with-es6-generators-vs-redux-thunk-with-es7-async/34933395"}),"this comparison")," if you're used to ",Object(o.b)("inlineCode",{parentName:"p"},"redux-thunk"),")"),Object(o.b)("h2",{id:"usage"},"Usage"),Object(o.b)("p",null,"Sagas are associated with a container, just like actions, constants, selectors\nand reducers. If your container already has a ",Object(o.b)("inlineCode",{parentName:"p"},"saga.js")," file, simply add your\nsaga to that. If your container does not yet have a ",Object(o.b)("inlineCode",{parentName:"p"},"saga.js")," file, add one with\nthis boilerplate structure:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-JS"}),"import { takeLatest, call, put, select } from 'redux-saga/effects';\n\n// Root saga\nexport default function* rootSaga() {\n  // if necessary, start multiple sagas at once with `all`\n  yield [\n    takeLatest(LOAD_REPOS, getRepos),\n    takeLatest(LOAD_USERS, getUsers),\n  ];\n}\n")),Object(o.b)("p",null,"Then, in your ",Object(o.b)("inlineCode",{parentName:"p"},"index.js"),", use a decorator to inject the root saga:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-JS"}),"import injectSaga from 'utils/injectSaga';\nimport { DAEMON } from 'utils/constants';\nimport saga from './saga';\n\n// ...\n\n// `mode` is an optional argument, default value is `DAEMON`\nconst withSaga = injectSaga({ key: 'yourcomponent', saga, mode: DAEMON });\n\nexport default compose(\n  withSaga,\n)(YourComponent);\n")),Object(o.b)("p",null,"A ",Object(o.b)("inlineCode",{parentName:"p"},"mode")," argument can be one of three constants (import them from ",Object(o.b)("inlineCode",{parentName:"p"},"utils/constants"),"):"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"DAEMON")," (default value) \u2014 starts a saga on component mount and never cancels it or starts again;"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"RESTART_ON_REMOUNT")," \u2014 starts a saga when a component is being mounted\nand cancels with ",Object(o.b)("inlineCode",{parentName:"li"},"task.cancel()")," on component un-mount for improved performance;"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"ONCE_TILL_UNMOUNT")," \u2014 behaves like ",Object(o.b)("inlineCode",{parentName:"li"},"RESTART_ON_REMOUNT")," but never runs the saga again.")),Object(o.b)("p",null,"Now add as many sagas to your ",Object(o.b)("inlineCode",{parentName:"p"},"saga.js")," file as you want!"),Object(o.b)("hr",null),Object(o.b)("p",null,Object(o.b)("em",{parentName:"p"},"Don't like this feature? ",Object(o.b)("a",Object(a.a)({parentName:"em"},{href:"/docs/js/remove"}),"Click here"))))}u.isMDXComponent=!0},196:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),u=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=u(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=u(n),d=a,m=p["".concat(i,".").concat(d)]||p[d]||b[d]||o;return n?r.a.createElement(m,s(s({ref:t},l),{},{components:n})):r.a.createElement(m,s({ref:t},l))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);